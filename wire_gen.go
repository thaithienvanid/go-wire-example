// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/google/wire"
	"go-wire-example/internal/repos"
	"go-wire-example/internal/services/base"
	"go-wire-example/internal/services/rest_api"
	"go-wire-example/pkg/log"
)

import (
	_ "github.com/google/subcommands"
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

func InitializeApplication() (*Application, func(), error) {
	config := ProvideConfig()
	iLogger, cleanup, err := log.ProvideLogger()
	if err != nil {
		return nil, nil, err
	}
	rest_apiConfig := ProvideRestAPIConfig(config)
	iRepository := repos.NewRepository(iLogger)
	service, err := base.NewService(iLogger, iRepository)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	rest_apiService, err := rest_api.NewService(rest_apiConfig, service)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	application, cleanup2, err := ProvideApplication(config, iLogger, rest_apiService)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	return application, func() {
		cleanup2()
		cleanup()
	}, nil
}

// wire.go:

var CoreSet = wire.NewSet(
	ProvideConfig, log.ProvideLogger, repos.NewRepository, base.NewService,
)

var RestAPISet = wire.NewSet(
	ProvideRestAPIConfig, rest_api.NewService,
)
